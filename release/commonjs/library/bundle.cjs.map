{"version":3,"sources":["../../../source/esmodule/library/bundle.js"],"names":[],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,SAAS,MAAT,CAAgB,OAAhB,EAAyB;AAEvB,EAAA,OAAO,CAAC,YAAR,CAAqB,yBAArB,EAAiD,KAAD,IAAW;AACzD,WAAO,OAAO,KAAP,KAAiB,UAAxB;AACD,GAFD;AAIA,EAAA,OAAO,CAAC,YAAR,CAAqB,YAArB,EAAoC,KAAD,IAAW;AAC5C,WAAO,KAAK,CAAC,OAAN,CAAc,KAAd,KAAwB,KAAK,CAAC,MAAN,IAAgB,CAA/C;AACD,GAFD;AAIA,EAAA,OAAO,CAAC,YAAR,CAAqB,SAArB,EAAgC,MAAM;AACpC,WAAO,yBAAP;AACD,GAFD;AAIA,EAAA,OAAO,CAAC,YAAR,CAAqB,QAArB,EAA+B,MAAM;AACnC,WAAO,eAAP;AACD,GAFD;AAIA,EAAA,OAAO,CAAC,YAAR,CAAqB,SAArB,EAAgC,MAAM;AACpC,WAAO,CAAC,eAAR;AACD,GAFD;AAID","file":"bundle.cjs","sourcesContent":["import IsNode from 'is-node'\nimport IsWindows from 'is-windows'\n\nfunction Bundle(utility) {\n \n  utility.addPredicate('functionOrAsyncFunction', (value) => {\n    return typeof value === 'function'\n  })\n \n  utility.addPredicate('emptyArray', (value) => {\n    return Array.isArray(value) && value.length == 0\n  })\n \n  utility.addPredicate('windows', () => {\n    return IsWindows()\n  })\n  \n  utility.addPredicate('server', () => {\n    return IsNode\n  })\n  \n  utility.addPredicate('browser', () => {\n    return !IsNode\n  })\n\n}\n\nexport { Bundle }\n"]}
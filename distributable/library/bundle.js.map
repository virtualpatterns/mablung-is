{"version":3,"sources":["../../source/library/bundle.js"],"names":["IsWindows","Bundle","utility","addPredicate","value","Array","isArray","length"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;;AAEA,SAASC,MAAT,CAAgBC,OAAhB,EAAyB;;AAEvBA,EAAAA,OAAO,CAACC,YAAR,CAAqB,yBAArB,EAAiDC,KAAD,IAAW;AACzD,WAAO,OAAOA,KAAP,KAAiB,UAAxB;AACD,GAFD;;AAIAF,EAAAA,OAAO,CAACC,YAAR,CAAqB,YAArB,EAAoCC,KAAD,IAAW;AAC5C,WAAOC,KAAK,CAACC,OAAN,CAAcF,KAAd,KAAwBA,KAAK,CAACG,MAAN,IAAgB,CAA/C;AACD,GAFD;;AAIAL,EAAAA,OAAO,CAACC,YAAR,CAAqB,SAArB,EAAgC,MAAM;AACpC,WAAOH,SAAS,EAAhB;AACD,GAFD;;AAID;;AAED,SAASC,MAAT","sourcesContent":["import IsWindows from 'is-windows'\n\nfunction Bundle(utility) {\n \n  utility.addPredicate('functionOrAsyncFunction', (value) => {\n    return typeof value === 'function'\n  })\n \n  utility.addPredicate('emptyArray', (value) => {\n    return Array.isArray(value) && value.length == 0\n  })\n \n  utility.addPredicate('windows', () => {\n    return IsWindows()\n  })\n \n}\n\nexport { Bundle }\n"],"file":"bundle.js"}